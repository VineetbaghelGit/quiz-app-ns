{"ast":null,"code":"var _jsxFileName = \"/home/vineet/Developer/REACT/quiz-app-ns/src/context/Context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizContext = /*#__PURE__*/createContext();\nfunction Context({\n  children\n}) {\n  _s();\n  const [questionList, setQuestionList] = useState([]);\n  const [selectedQuestion, setSelectedQuestion] = useState(0);\n  const [options, setOptions] = useState([]);\n  const [numberOfQuestion, setNumberOfQuestion] = useState(0);\n  const [correctAnswer, setCorrectAnswer] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(false);\n  const [wrongAnsSelect, setWrongAnsSelect] = useState(false);\n  const [attemptedQuestion, setAttemptedQuestion] = useState(0);\n  const fetchData = async () => {\n    var _res$results;\n    const url = \"https://opentdb.com/api.php?amount=15&category=21\";\n    const data = await fetch(url);\n    const res = await data.json();\n    console.log(\"ðŸš€ ~ file: Context.js:18 ~ fetchData ~ res:\", res);\n    setQuestionList(res === null || res === void 0 ? void 0 : res.results);\n    setNumberOfQuestion(res === null || res === void 0 ? void 0 : (_res$results = res.results) === null || _res$results === void 0 ? void 0 : _res$results.length);\n    const randomOption = () => {\n      var _res$results$, _res$results$2;\n      const seriesOption = [(_res$results$ = res.results[0]) === null || _res$results$ === void 0 ? void 0 : _res$results$.correct_answer, ...((_res$results$2 = res.results[0]) === null || _res$results$2 === void 0 ? void 0 : _res$results$2.incorrect_answers)];\n      setOptions(seriesOption.map(answer => ({\n        id: Math.random(),\n        value: answer\n      })).sort((a, b) => a.id - b.id));\n    };\n    randomOption();\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(QuizContext.Provider, {\n    value: {\n      questionList,\n      setQuestionList,\n      selectedQuestion,\n      setSelectedQuestion,\n      options,\n      setOptions,\n      numberOfQuestion,\n      correctAnswer,\n      setCorrectAnswer,\n      selectedOption,\n      setSelectedOption,\n      wrongAnsSelect,\n      setWrongAnsSelect,\n      attemptedQuestion,\n      setAttemptedQuestion\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Context, \"pXKTzVwRQWE+xEwSokgxX0G12JE=\");\n_c = Context;\nexport const StateValue = () => {\n  _s2();\n  return useContext(QuizContext);\n};\n_s2(StateValue, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n_c2 = StateValue;\nexport default Context;\nvar _c, _c2;\n$RefreshReg$(_c, \"Context\");\n$RefreshReg$(_c2, \"StateValue\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","QuizContext","Context","children","_s","questionList","setQuestionList","selectedQuestion","setSelectedQuestion","options","setOptions","numberOfQuestion","setNumberOfQuestion","correctAnswer","setCorrectAnswer","selectedOption","setSelectedOption","wrongAnsSelect","setWrongAnsSelect","attemptedQuestion","setAttemptedQuestion","fetchData","_res$results","url","data","fetch","res","json","console","log","results","length","randomOption","_res$results$","_res$results$2","seriesOption","correct_answer","incorrect_answers","map","answer","id","Math","random","value","sort","a","b","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","StateValue","_s2","_c2","$RefreshReg$"],"sources":["/home/vineet/Developer/REACT/quiz-app-ns/src/context/Context.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\nconst QuizContext = createContext();\n\nfunction Context({ children }) {\n  const [questionList, setQuestionList] = useState([]);\n  const [selectedQuestion, setSelectedQuestion] = useState(0);\n  const [options, setOptions] = useState([]);\n  const [numberOfQuestion, setNumberOfQuestion] = useState(0);\n  const [correctAnswer, setCorrectAnswer] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(false);\n  const [wrongAnsSelect, setWrongAnsSelect] = useState(false);\n  const [attemptedQuestion, setAttemptedQuestion] = useState(0);\n\n  const fetchData = async () => {\n    const url = \"https://opentdb.com/api.php?amount=15&category=21\";\n    const data = await fetch(url);\n    const res = await data.json();\n    console.log(\"ðŸš€ ~ file: Context.js:18 ~ fetchData ~ res:\", res);\n    setQuestionList(res?.results);\n    setNumberOfQuestion(res?.results?.length);\n    const randomOption = () => {\n      const seriesOption = [\n        res.results[0]?.correct_answer,\n        ...res.results[0]?.incorrect_answers,\n      ];\n      setOptions(\n        seriesOption\n          .map((answer) => ({ id: Math.random(), value: answer }))\n          .sort((a, b) => a.id - b.id)\n      );\n    };\n    randomOption();\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return (\n    <QuizContext.Provider\n      value={{\n        questionList,\n        setQuestionList,\n        selectedQuestion,\n        setSelectedQuestion,\n        options,\n        setOptions,\n        numberOfQuestion,\n        correctAnswer,\n        setCorrectAnswer,\n        selectedOption,\n        setSelectedOption,\n        wrongAnsSelect,\n        setWrongAnsSelect,\n        attemptedQuestion,\n        setAttemptedQuestion,\n      }}\n    >\n      {children}\n    </QuizContext.Provider>\n  );\n}\nexport const StateValue = () => {\n  return useContext(QuizContext);\n};\n\nexport default Context;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}